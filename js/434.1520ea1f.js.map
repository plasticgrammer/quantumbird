{"version":3,"file":"js/434.1520ea1f.js","mappings":"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","sources":["webpack://weekly-report/./node_modules/@stripe/stripe-js/dist/index.mjs","webpack://weekly-report/./src/composables/useStripe.js","webpack://weekly-report/./src/views/AccountSetting.vue","webpack://weekly-report/./src/views/AccountSetting.vue?1998"],"sourcesContent":["var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"4.8.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar onErrorListener = null;\nvar onLoadListener = null;\n\nvar onError = function onError(reject) {\n  return function () {\n    reject(new Error('Failed to load Stripe.js'));\n  };\n};\n\nvar onLoad = function onLoad(resolve, reject) {\n  return function () {\n    if (window.Stripe) {\n      resolve(window.Stripe);\n    } else {\n      reject(new Error('Stripe.js not available'));\n    }\n  };\n};\n\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      } else if (script && onLoadListener !== null && onErrorListener !== null) {\n        var _script$parentNode;\n\n        // remove event listeners\n        script.removeEventListener('load', onLoadListener);\n        script.removeEventListener('error', onErrorListener); // if script exists, but we are reloading due to an error,\n        // reload script to trigger 'load' event\n\n        (_script$parentNode = script.parentNode) === null || _script$parentNode === void 0 ? void 0 : _script$parentNode.removeChild(script);\n        script = injectScript(params);\n      }\n\n      onLoadListener = onLoad(resolve, reject);\n      onErrorListener = onError(reject);\n      script.addEventListener('load', onLoadListener);\n      script.addEventListener('error', onErrorListener);\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  }); // Resets stripePromise on error\n\n  return stripePromise[\"catch\"](function (error) {\n    stripePromise = null;\n    return Promise.reject(error);\n  });\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nvar stripePromise$1;\nvar loadCalled = false;\n\nvar getStripePromise = function getStripePromise() {\n  if (stripePromise$1) {\n    return stripePromise$1;\n  }\n\n  stripePromise$1 = loadScript(null)[\"catch\"](function (error) {\n    // clear cache on error\n    stripePromise$1 = null;\n    return Promise.reject(error);\n  });\n  return stripePromise$1;\n}; // Execute our own script injection after a tick to give users time to do their\n// own script injection.\n\n\nPromise.resolve().then(function () {\n  return getStripePromise();\n})[\"catch\"](function (error) {\n  if (!loadCalled) {\n    console.warn(error);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now(); // if previous attempts are unsuccessful, will re-load script\n\n  return getStripePromise().then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n","import { ref, reactive } from 'vue'\nimport { loadStripe } from '@stripe/stripe-js'\nimport { plans } from '@/config/plans'\n\nexport function useStripe() {\n  // 既存のref/reactive\n  const stripe = ref(null)\n  const elements = ref(null)\n  const cards = reactive({})\n\n  const initializeStripe = async () => {\n    try {\n      const stripeKey = process.env.VUE_APP_STRIPE_PUBLISHABLE_KEY\n      if (!stripeKey) {\n        throw new Error('Stripe public key is not set')\n      }\n\n      // すでに初期化済みの場合は既存のインスタンスを返す\n      if (stripe.value && elements.value) {\n        return { stripe: stripe.value, elements: elements.value }\n      }\n\n      stripe.value = await loadStripe(stripeKey)\n      elements.value = stripe.value.elements({\n        locale: 'ja'\n      })\n\n      // 初期化完了を確実にするため少し待機\n      await new Promise(resolve => setTimeout(resolve, 100))\n\n      return { stripe: stripe.value, elements: elements.value }\n    } catch (error) {\n      console.error('Stripe initialization error:', error)\n      throw error\n    }\n  }\n\n  const createCardElement = async (elementId) => {\n    if (!elements.value) {\n      throw new Error('Stripe Elements has not been initialized')\n    }\n\n    try {\n      // 既存のカード要素を破棄\n      if (cards[elementId]) {\n        cards[elementId].destroy()\n        delete cards[elementId]\n      }\n\n      // DOMの準備を待機\n      await new Promise(resolve => setTimeout(resolve, 100))\n\n      const mountPoint = document.getElementById(elementId)\n      if (!mountPoint) {\n        throw new Error(`Mount point #${elementId} not found`)\n      }\n\n      // カード要素の作成\n      cards[elementId] = elements.value.create('card', {\n        style: {\n          base: {\n            fontSize: '16px',\n            color: '#32325d',\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n            '::placeholder': {\n              color: '#aab7c4'\n            }\n          },\n          invalid: {\n            color: '#fa755a',\n            iconColor: '#fa755a'\n          }\n        },\n        hidePostalCode: true\n      })\n\n      // マウント前に少し待機\n      await new Promise(resolve => setTimeout(resolve, 100))\n\n      // カード要素のマウント\n      cards[elementId].mount(`#${elementId}`)\n      return cards[elementId]\n    } catch (error) {\n      console.error('Card element creation error:', error)\n      throw error\n    }\n  }\n\n  const createToken = async (elementId, data) => {\n    if (!stripe.value || !cards[elementId]) {\n      throw new Error('Stripe has not been initialized')\n    }\n\n    return stripe.value.createToken(cards[elementId], data)\n  }\n\n  const destroyCardElement = (elementId) => {\n    if (cards[elementId]) {\n      cards[elementId].destroy()\n      delete cards[elementId]\n    }\n  }\n\n  const cleanup = () => {\n    // Destroy all card elements\n    Object.keys(cards).forEach(elementId => {\n      destroyCardElement(elementId)\n    })\n    // Reset the refs\n    stripe.value = null\n    elements.value = null\n  }\n\n  return {\n    // 状態\n    stripe,\n    elements,\n    cards,\n    plans,\n\n    // メソッド\n    initializeStripe,\n    createCardElement,\n    createToken,\n    destroyCardElement,\n    cleanup\n  }\n}","<template>\n  <v-container>\n    <v-row dense class=\"pb-4\">\n      <v-col>\n        <h3>\n          <v-icon size=\"large\" class=\"mr-1\">mdi-cog-outline</v-icon>\n          アカウント設定\n        </h3>\n      </v-col>\n    </v-row>\n\n    <v-card>\n      <v-card-title>アカウント情報</v-card-title>\n      <v-card-text>\n        <v-row>\n          <v-col cols=\"12\" md=\"6\">\n            <v-text-field\n              v-model=\"email\"\n              label=\"メールアドレス\"\n              readonly\n              hide-details\n              class=\"mb-4\"\n            ></v-text-field>\n          </v-col>\n          <v-col cols=\"12\" md=\"3\">\n            <v-text-field\n              v-model=\"organizationId\"\n              label=\"組織ID\"\n              readonly\n              hide-details\n              class=\"mb-4\"\n            ></v-text-field>\n          </v-col>\n        </v-row>\n\n        <v-btn\n          color=\"primary\"\n          variant=\"text\"\n          @click=\"showPasswordDialog = true\"\n        >\n          パスワードを変更\n          <v-icon class=\"ml-1\" size=\"small\">mdi-chevron-right</v-icon>\n        </v-btn>\n\n        <!-- プラン情報表示 -->\n        <v-card \n          v-if=\"isParentAccount\"\n          class=\"mt-4 mb-2\" \n          elevation=\"0\" \n          color=\"blue-lighten-5 border-thin\" \n          outlined\n        >\n          <v-card-title>支払い設定</v-card-title>\n          <v-card-text class=\"px-6\">\n            <v-row>\n              <v-col cols=\"12\" md=\"9\" class=\"me-auto\">\n                <div class=\"d-flex align-center\">\n                  <p class=\"mb-0 mr-4\">現在のプラン：{{ currentPlanName }}</p>\n                  <v-chip\n                    v-if=\"isTrialPeriod\"\n                    color=\"warning\"\n                    size=\"small\"\n                    class=\"mr-2\"\n                  >\n                    トライアル期間中\n                  </v-chip>\n                </div>\n                <p class=\"text-caption text-grey mt-1\">\n                  プランの変更、支払い履歴の確認、請求書のダウンロードは支払い設定ページで行えます。\n                </p>\n              </v-col>\n              <v-col cols=\"12\" md=\"auto\">\n                <v-btn color=\"primary\" @click=\"router.push({ name: 'Billing' })\">\n                  <v-icon class=\"mr-2\">mdi-wallet-outline</v-icon>\n                  支払い設定\n                </v-btn>\n              </v-col>\n            </v-row>\n          </v-card-text>\n        </v-card>\n\n        <v-alert\n          v-else\n          type=\"info\"\n          variant=\"tonal\"\n          color=\"blue-grey\"\n          class=\"mt-4 rounded-lg\"\n        >\n          <div>\n            このアカウントは親組織のサブアカウントとして管理されています。<br>\n            アカウントの変更および削除は親アカウントで行ってくださ��。\n          </div>\n        </v-alert>\n      </v-card-text>\n    </v-card>\n\n    <v-card class=\"mt-4\">\n      <v-card-title>データ管理</v-card-title>\n      <v-card-text class=\"px-6\">\n        <p class=\"mb-3\">週次報告データをJSON形式でエクスポートします。</p>\n        <v-btn color=\"info\" :loading=\"isExporting\" @click=\"exportData\">\n          <v-icon class=\"mr-2\">mdi-download</v-icon>\n          データをエクスポート\n        </v-btn>\n      </v-card-text>\n    </v-card>\n\n    <!-- パスワード変更ダイアログ -->\n    <v-dialog v-model=\"showPasswordDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>パスワード変更</v-card-title>\n        <v-card-text class=\"pb-2\">\n          <v-form ref=\"passwordForm\" @submit.prevent=\"changePassword\">\n            <v-text-field\n              v-model=\"passwordData.oldPassword\"\n              label=\"現在のパスワード\"\n              :type=\"showPassword ? 'text' : 'password'\"\n              :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n              :rules=\"[v => !!v || '現在のパスワードを入力してください']\"\n              hide-details=\"auto\"\n              class=\"mb-4\"\n              @click:append=\"showPassword = !showPassword\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"passwordData.newPassword\"\n              label=\"新しいパスワード\"\n              :type=\"showNewPassword ? 'text' : 'password'\"\n              :append-icon=\"showNewPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n              :rules=\"passwordRules\"\n              hide-details=\"auto\"\n              class=\"mb-4\"\n              @click:append=\"showNewPassword = !showNewPassword\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"passwordData.confirmPassword\"\n              label=\"新しいパスワード（確認）\"\n              :type=\"showNewPassword ? 'text' : 'password'\"\n              :rules=\"[\n                v => !!v || 'パスワードを確認してください',\n                v => v === passwordData.newPassword || 'パスワードが一致しません'\n              ]\"\n              hide-details=\"auto\"\n              class=\"mb-4\"\n            ></v-text-field>\n\n            <div class=\"text-caption text-grey mb-2\">\n              パスワードは以下の要件を満たす必要があります：\n              <ul class=\"ml-5 mt-1\">\n                <li>8文字以上</li>\n                <li>大文字を含む</li>\n                <li>小文字を含む</li>\n                <li>数字を含む</li>\n              </ul>\n            </div>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            variant=\"text\"\n            @click=\"showPasswordDialog = false\"\n          >\n            キャンセル\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            :loading=\"isChangingPassword\"\n            :disabled=\"isChangingPassword\"\n            @click=\"changePassword\"\n          >\n            変更する\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- 削除確認ダイアログ -->\n    <v-card \n      v-if=\"isParentAccount\"\n      class=\"mt-4\"\n    >\n      <v-card-title class=\"text-error\">危険ゾーン</v-card-title>\n      <v-card-text class=\"px-6\">\n        <div class=\"d-flex flex-column gap-4\">\n          <!-- アカウント引き継ぎ -->\n          <div class=\"border-bottom pb-6\">\n            <p class=\"mb-2\">アカウント引き継ぎ用にユーザー削除を行います。新しいユーザーに組織の管理を移譲できます。</p>\n            <v-btn \n              color=\"error\" \n              @click=\"showDeleteDialog = true\"\n            >\n              <v-icon class=\"mr-2\">mdi-account-switch</v-icon>\n              アカウント引き継ぎ用の削除\n            </v-btn>\n          </div>\n\n          <!-- アカウント完全削除 -->\n          <div>\n            <p class=\"mb-2 text-error\">\n              アカウントと全てのデータを完全に削除します。\n            </p>\n            <v-btn \n              color=\"error\" \n              @click=\"showDeleteAllDialog = true\"\n            >\n              <v-icon class=\"mr-2\">mdi-account-off</v-icon>\n              アカウントを完全に削除\n            </v-btn>\n          </div>\n        </div>\n      </v-card-text>\n    </v-card>\n\n    <!-- アカウント引き継ぎダイアログ -->\n    <v-dialog v-model=\"showDeleteDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>アカウント引き継ぎ用 削除</v-card-title>\n        <v-card-text>\n          アカウントの引き継ぎを行うと：\n          <div class=\"mb-4\">\n            <ul class=\"ml-4\">\n              <li>ユーザーアカウント情報、組織情報は削除されます</li>\n              <li>メンバー情報、週次報告履歴は保持されます</li>\n              <li>削除後に組織ID「<span class=\"text-error\">{{ organizationId }}</span>」でサインアップしたユーザーが、<br>組織の新しい管理者となります</li>\n            </ul>\n            この操作は取り消すことができません。\n          </div>\n          <v-text-field\n            v-model=\"deleteConfirmText\"\n            label=\"確認のため 'DELETE' と入力してください\"\n            hide-details\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" variant=\"text\" @click=\"showDeleteDialog = false\">\n            キャンセル\n          </v-btn>\n          <v-btn\n            color=\"error\"\n            :disabled=\"deleteConfirmText !== 'DELETE'\"\n            :loading=\"isDeleting\"\n            @click=\"deleteAccount\"\n          >\n            削除する\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- アカウント完全削除ダイアログ -->\n    <v-dialog v-model=\"showDeleteAllDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>アカウントの完全削除</v-card-title>\n        <v-card-text>\n          以下のデータが完全に削除されます：\n          <div class=\"mb-4\">\n            <ul class=\"ml-4\">\n              <li>ユーザーアカウント情報</li>\n              <li>組織、メンバー情報</li>\n              <li>週次報告履歴</li>\n            </ul>\n            <span class=\"text-error\">この操作は取り消すことができません。</span>\n          </div>\n          <v-text-field\n            v-model=\"deleteConfirmText\"\n            label=\"確認のため 'DELETE-ALL' と入力してください\"\n            hide-details\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" variant=\"text\" @click=\"showDeleteAllDialog = false\">\n            キャンセル\n          </v-btn>\n          <v-btn\n            color=\"error\"\n            :disabled=\"deleteConfirmText !== 'DELETE-ALL'\"\n            :loading=\"isDeleting\"\n            @click=\"deleteAccountCompletely\"\n          >\n            完全に削除する\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script setup>\nimport { ref, inject, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { exportReports } from '@/services/reportService'\nimport { deleteOrganization, deleteOrganizationCompletely } from '@/services/organizationService'\nimport { useStripe } from '@/composables/useStripe'\nimport { cancelSubscription } from '@/services/paymentService'\n\nconst store = useStore()\nconst router = useRouter()\nconst { plans } = useStripe() // plansを取得\n\nconst passwordForm = ref(null)\nconst organizationId = store.getters['auth/organizationId']\n\nconst email = ref('')\nconst showPasswordDialog = ref(false)\nconst showPassword = ref(false)\nconst showNewPassword = ref(false)\nconst isChangingPassword = ref(false)\nconst passwordData = ref({\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n})\nconst isExporting = ref(false)\nconst showDeleteDialog = ref(false)\nconst showDeleteAllDialog = ref(false)\nconst isDeleting = ref(false)\nconst deleteConfirmText = ref('')\n\nconst showNotification = inject('showNotification')\nconst showError = inject('showError')\nconst showConfirmDialog = inject('showConfirmDialog')\n\n// 現在のプラン名を取得する computed プロパティ\nconst currentPlanName = computed(() => {\n  const subscription = store.getters['auth/currentSubscription']\n  const plan = plans.find(p => p.planId === subscription?.planId)\n  return plan?.name || 'フリープラン'\n})\n\n// isTrialPeriod computed propertyを追加\nconst isTrialPeriod = computed(() => {\n  const subscription = store.getters['auth/currentSubscription']\n  return subscription?.trialEnd && new Date(subscription.trialEnd) > new Date()\n})\n\n// isChildAccountを削除し、isParentAccountを使用\nconst isParentAccount = computed(() => store.getters['auth/isParentAccount'])\n\n// パスワードのバリデーションルール\nconst passwordRules = [\n  v => !!v || 'パスワードを入力してください',\n  v => v.length >= 8 || 'パスワードは8文字以上である必要があります',\n  v => /[A-Z]/.test(v) || '大文字を含める必要があります',\n  v => /[a-z]/.test(v) || '小文字を含める必要があります',\n  v => /[0-9]/.test(v) || '数字を含める必要があります'\n]\n\nconst user = computed(() => store.state.auth.user)\n\nconst changePassword = async () => {\n  if (!passwordForm.value.validate()) return\n\n  isChangingPassword.value = true\n  try {\n    await store.dispatch('auth/updatePassword', {\n      oldPassword: passwordData.value.oldPassword,\n      newPassword: passwordData.value.newPassword\n    })\n\n    showNotification('パスワードが正常に変更されました')\n\n    resetPasswordForm()\n    showPasswordDialog.value = false\n  } catch (error) {\n    let errorMessage = 'パスワードの変更に失敗しました'\n    if (error.message === 'Incorrect username or password.') {\n      errorMessage = '現在のパスワードが正しくありません'\n    }\n    showError(errorMessage)\n  } finally {\n    isChangingPassword.value = false\n  }\n}\n\nconst resetPasswordForm = () => {\n  passwordData.value = {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  }\n  passwordForm.value?.reset()\n}\n\nconst changeToFreePlan = async () => {\n  const subscription = store.getters['auth/currentSubscription']\n  // フリープランの場合はスキップ\n  if (!subscription?.stripeCustomerId || subscription.planId === 'free') {\n    return\n  }\n\n  await cancelSubscription(subscription.stripeCustomerId)\n  await store.dispatch('auth/updateSubscriptionAttributes', {\n    planId: 'free',\n    accountCount: null,\n    stripeCustomerId: subscription.stripeCustomerId\n  })\n}\n\nconst deleteAccount = async () => {\n  const confirmed = await showConfirmDialog('確認', 'アカウントを削除します。よろしいですか？')\n  if (!confirmed) return\n\n  isDeleting.value = true\n  try {\n    await changeToFreePlan()\n    await deleteOrganization(organizationId)\n    await store.dispatch('auth/deleteUserAccount')\n\n    showNotification('アカウントが削除されました')\n    router.push({ name: 'SignIn' })\n  } catch (error) {\n    let errorMessage = 'アカウントの削除に失敗しました'\n    if (error.response?.data?.message) {\n      errorMessage += `\\n${error.response.data.message}`\n    }\n    showError(errorMessage)\n  } finally {\n    isDeleting.value = false\n    showDeleteDialog.value = false\n    deleteConfirmText.value = ''\n  }\n}\n\nconst deleteAccountCompletely = async () => {\n  const confirmed = await showConfirmDialog('確認', 'アカウントとすべてのデータを削除します。よろしいですか？')\n  if (!confirmed) return\n\n  isDeleting.value = true\n  try {\n    await changeToFreePlan()\n    await deleteOrganizationCompletely(organizationId)\n\n    await store.dispatch('auth/deleteUserAccount')\n\n    showNotification('アカウントとすべてのデータが削除されました')\n    router.push({ name: 'SignIn' })\n  } catch (error) {\n    let errorMessage = 'アカウントの完全削除に失敗しました'\n    if (error.response?.data?.message) {\n      errorMessage += `\\n${error.response.data.message}`\n    }\n    showError(errorMessage)\n  } finally {\n    isDeleting.value = false\n    showDeleteAllDialog.value = false\n    deleteConfirmText.value = ''\n  }\n}\n\nconst exportData = async () => {\n  isExporting.value = true\n  try {\n    const result = await exportReports(organizationId)\n    const blob = new Blob([JSON.stringify(result, null, 2)], { type: 'application/json' })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.style.display = 'none'\n    a.href = url\n    a.download = 'weekly_report.json'\n    document.body.appendChild(a)\n    a.click()\n    window.URL.revokeObjectURL(url)\n    showNotification('エクスポートが完了しました')\n  } catch (error) {\n    console.error('Data export failed:', error)\n    showError('エクスポートに失敗しました')\n  } finally {\n    isExporting.value = false\n  }\n}\n\nonMounted(async () => {\n  email.value = user.value.email\n})\n</script>","import script from \"./AccountSetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AccountSetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["stripePromise$1","V3_URL","V3_URL_REGEX","EXISTING_SCRIPT_MESSAGE","findScript","scripts","document","querySelectorAll","concat","i","length","script","test","src","injectScript","params","queryString","advancedFraudSignals","createElement","headOrBody","head","body","Error","appendChild","registerWrapper","stripe","startTime","_registerWrapper","name","version","stripePromise","onErrorListener","onLoadListener","onError","reject","onLoad","resolve","window","Stripe","loadScript","Promise","console","warn","_script$parentNode","removeEventListener","parentNode","removeChild","addEventListener","error","initStripe","maybeStripe","args","apply","undefined","loadCalled","getStripePromise","then","loadStripe","_len","arguments","Array","_key","Date","now","useStripe","ref","elements","cards","reactive","initializeStripe","async","stripeKey","process","value","locale","setTimeout","createCardElement","elementId","destroy","mountPoint","getElementById","create","style","base","fontSize","color","fontFamily","invalid","iconColor","hidePostalCode","mount","createToken","data","destroyCardElement","cleanup","Object","keys","forEach","plans","store","useStore","router","useRouter","passwordForm","organizationId","getters","email","showPasswordDialog","showPassword","showNewPassword","isChangingPassword","passwordData","oldPassword","newPassword","confirmPassword","isExporting","showDeleteDialog","showDeleteAllDialog","isDeleting","deleteConfirmText","showNotification","inject","showError","showConfirmDialog","currentPlanName","computed","subscription","plan","find","p","planId","isTrialPeriod","trialEnd","isParentAccount","passwordRules","v","user","state","auth","changePassword","validate","dispatch","resetPasswordForm","errorMessage","message","reset","changeToFreePlan","stripeCustomerId","cancelSubscription","accountCount","deleteAccount","confirmed","deleteOrganization","push","response","deleteAccountCompletely","deleteOrganizationCompletely","exportData","result","exportReports","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","display","href","download","click","revokeObjectURL","onMounted","__exports__"],"sourceRoot":""}