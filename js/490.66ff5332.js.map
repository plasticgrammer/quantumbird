{"version":3,"file":"js/490.66ff5332.js","mappings":"4nCAwMA,MAAM,SAAEA,IAAaC,EAAAA,EAAAA,KAEfC,EAAQC,EAmBRC,EAAOC,EAEPC,GAAeC,EAAAA,EAAAA,UAAS,CAC5BC,aAAc,UACdC,kBAAkB,EAClBC,WAAW,EACXC,mBAAmB,EACnBC,aAAa,EACbC,OAAQ,GACRC,iBAAkB,EAClBC,qBAAqB,IAGjBC,GAAoBC,EAAAA,EAAAA,WAAS,IAC5Bf,EAAMgB,iBAKPhB,EAAMiB,iBAAiBC,OAAS,EAC3BC,OAAOC,YACZD,OAAOE,QAAQC,EAAAA,IAAcC,QAAO,EAAEC,KAC7BxB,EAAMiB,gBAAgBQ,SAASD,MAPnC,CAAEE,QAASJ,EAAAA,GAAaI,WAc7BC,EAAaA,KAEjB,MAAMC,EAAeT,OAAOU,KAAKf,EAAkBgB,OAAO,IAAM,UAEhEX,OAAOY,OAAO3B,EAAc,CAC1BE,aAAcsB,EACdrB,kBAAkB,EAClBC,WAAW,EACXC,mBAAmB,EACnBE,OAAQ,GACRE,qBAAqB,GACrB,EAGEmB,EAAoBC,UACxB,GAAKC,GAAelC,EAAMgB,gBAE1B,IACE,MAAMmB,QAAeC,EAAAA,EAAAA,IAAUF,GAC/B9B,EAAaQ,iBAAmBuB,EAAOE,eAAiB,CAC1D,CAAE,MAAOC,GAEPlC,EAAaQ,iBAAmB,CAClC,GAGI2B,EAAsBT,IAC1B5B,EAAK,oBAAqB4B,GACrBA,GACHH,GACF,EAGIa,EAAqBC,IACzBrC,EAAaG,iBAAmBkC,CAAQ,EAGpCC,EAAuBT,UAC3B,KAAI7B,EAAaI,WAAaJ,EAAaQ,kBAAoB,GAE/D,IACER,EAAaI,WAAY,EACzB,MAAMmC,QAAiBC,EAAAA,EAAAA,IACrB5C,EAAM6C,cAAcX,WACpBlC,EAAM6C,cAAcC,WACpB1C,EAAaE,cAGfa,OAAOY,OAAO3B,EAAc,CAC1BO,OAAQgC,EAAShC,OACjBC,iBAAkB+B,EAAS/B,iBAC3BH,mBAAmB,GAGvB,CAAE,MAAO6B,GAEP,MAAMS,EAA8B,yBAAfT,EAAMU,KACrBC,EAAeF,EACjB,0CACA,iCACAA,IAAc3C,EAAaQ,iBAAmB,GAClDO,OAAOY,OAAO3B,EAAc,CAC1BO,OAAQsC,EACRxC,mBAAmB,GAEvB,CAAE,QACAL,EAAaI,WAAY,CAC3B,GAGI0C,GAAcnC,EAAAA,EAAAA,WAAS,IAAMI,OAAOU,KAAKf,EAAkBgB,SAE3DqB,EAAiBC,IACrB,IAAKpD,EAAMqD,YAAcjD,EAAaK,kBAAmB,OAEzD,MAAM6C,EAAeJ,EAAYpB,MAAMyB,QAAQnD,EAAaE,cAC5D,GAAkB,cAAd8C,EAAM5B,IAAqB,CAC7B,MAAMgC,EAAYF,GAAgB,EAAIJ,EAAYpB,MAAMZ,OAAS,EAAIoC,EAAe,EACpFlD,EAAaE,aAAe4C,EAAYpB,MAAM0B,EAChD,MAAO,GAAkB,eAAdJ,EAAM5B,IAAsB,CACrC,MAAMiC,EAAYH,GAAgBJ,EAAYpB,MAAMZ,OAAS,EAAI,EAAIoC,EAAe,EACpFlD,EAAaE,aAAe4C,EAAYpB,MAAM2B,EAChD,GAGIC,EAAuBA,KAC3BvC,OAAOwC,OAAO7C,EAAkBgB,OAAO8B,SAAQC,IAC7C,MAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMH,EAAQI,KAAK,GACvB,E,OAGJC,EAAAA,EAAAA,YAAU,KACRC,OAAOC,iBAAiB,UAAWjB,GACnCO,GAAsB,KAGxBW,EAAAA,EAAAA,cAAY,KACVF,OAAOG,oBAAoB,UAAWnB,EAAc,KAGtDoB,EAAAA,EAAAA,QAAM,IAAMvE,EAAM6C,gBAChBZ,UACMuC,GAAUtC,aACZP,IACI3B,EAAMgB,kBACRZ,EAAaS,oBAAsB2D,EAASC,YACtCzC,EAAkBwC,EAAStC,aAErC,GAEF,CAAEwC,WAAW,I,olOCnWf,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,kLCWO,MAAMC,GAAkBC,EAAAA,EAAAA,IAAa,CAC1CC,MAAOC,WAEJC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,OACF,UAEUC,GAASC,EAAAA,EAAAA,KAAAA,CAAmB,CACvCC,KAAM,SAEN3F,MAAO4E,IAEPgB,KAAAA,CAAO5F,EAAK6F,GAAa,IAAX,MAAEC,GAAOD,EACrB,MAAM,aAAEE,IAAiBC,EAAAA,EAAAA,IAAahG,IAChC,uBAAEiG,EAAsB,sBAAEC,IAA0BC,EAAAA,EAAAA,KAAmBC,EAAAA,EAAAA,OAAMpG,EAAO,WACpF,cAAEqG,IAAkBC,EAAAA,EAAAA,GAAUtG,IAC9B,gBAAEuG,IAAoBC,EAAAA,EAAAA,GAAaxG,IACnC,iBAAEyG,IAAqBC,EAAAA,EAAAA,GAAa1G,IACpC,eAAE2G,IAAmBC,EAAAA,EAAAA,GAAY5G,IACjC,gBAAE6G,IAAoBC,EAAAA,EAAAA,GAAY9G,IAClC,eAAE+G,IAAmBC,EAAAA,EAAAA,GAAWhH,GAwBtC,OAtBAiH,EAAAA,EAAAA,KAAU,KAAAC,EAAAA,EAAAA,aAAAlH,EAAAmH,IAAA,OAEC,CACL,UACApB,EAAajE,MACbmE,EAAuBnE,MACvBuE,EAAcvE,MACd2E,EAAiB3E,MACjB+E,EAAgB/E,MAChBiF,EAAejF,MACf9B,EAAMoH,OACP,MACM,CACLlB,EAAsBpE,MACtByE,EAAgBzE,MAChB6E,EAAe7E,MACf9B,EAAMqH,QAEEvB,KAIP,CAAC,CACV,G","sources":["webpack://weekly-report/./src/components/ReportCompleteDialog.vue","webpack://weekly-report/./src/components/ReportCompleteDialog.vue?bf80","webpack://weekly-report/../../../src/components/VSheet/VSheet.tsx"],"sourcesContent":["<template>\n  <v-dialog \n    :model-value=\"modelValue\"\n    :max-width=\"isAdviceEnabled ? (advisorState.isAdviceAvailable ? 780 : 600) : 480\"\n    persistent\n    @update:model-value=\"handleDialogUpdate\"\n  >\n    <v-card class=\"bg-plain text-center rounded-lg d-flex flex-column\">\n      <v-card-title class=\"text-h5 font-weight-bold flex-shrink-0\">\n        <span v-if=\"isMobile\">報告完了</span>\n        <span v-else>週次報告ありがとうございました</span>\n      </v-card-title>\n      <v-card-subtitle v-if=\"!isMobile && advisorState.showAddTicetMessage\">\n        新しい週次報告によりアドバイスチケットが付与されました\n      </v-card-subtitle>\n \n      <!-- チケット残数表示 -->\n      <div v-if=\"isAdviceEnabled\" class=\"ticket-chip-container\">\n        <v-chip\n          :color=\"advisorState.remainingTickets ? 'grey-darken-2' : 'grey-lighten-1'\"\n          class=\"ticket-chip\"\n          variant=\"outlined\"\n        >\n          <template v-if=\"advisorState.remainingTickets <= 3\">\n            <v-icon\n              v-for=\"i in 3\"\n              :key=\"i\"\n              :color=\"i <= advisorState.remainingTickets ? 'primary' : 'grey-lighten-1'\"\n              class=\"ticket-icon\"\n              size=\"small\" \n            >\n              {{ i <= advisorState.remainingTickets ? 'mdi-ticket' : 'mdi-ticket-outline' }}\n            </v-icon>\n          </template>\n          <template v-else>\n            <v-icon class=\"ticket-icon\" size=\"small\" color=\"indigo\">mdi-ticket</v-icon>\n            <span class=\"text-caption ml-1\">{{ advisorState.remainingTickets }}</span>\n          </template>\n          <v-tooltip activator=\"parent\" location=\"bottom\">\n            アドバイスチケット残数\n          </v-tooltip>\n        </v-chip>\n      </div>\n      \n      <!-- アドバイス機能が有効な場合 -->\n      <v-card-text class=\"py-1 flex-grow-1 scrollable-content\">\n        <template v-if=\"isAdviceEnabled\">\n          <!-- アドバイス表示 -->\n          <div v-if=\"advisorState.isAdviceAvailable\">\n            <v-sheet class=\"text-left pa-4 pt-1 mx-3 rounded-lg advisor-container\">\n              <v-img\n                :src=\"advisorRoles[advisorState.selectedRole].image\"\n                max-width=\"100\"\n                class=\"mx-auto mt-0 mb-2\"\n                :aspect-ratio=\"1\"\n              ></v-img>\n              <p class=\"text-caption text-grey-darken-1 mb-2\">\n                <v-icon \n                  :icon=\"advisorRoles[advisorState.selectedRole].icon\" \n                  :color=\"advisorRoles[advisorState.selectedRole].color\" \n                  class=\"me-1\"\n                />\n                {{ advisorRoles[advisorState.selectedRole].title }}からのアドバイス\n              </p>\n              <p class=\"text-advice text-grey-darken-3\">{{ advisorState.advice }}</p>\n            </v-sheet>\n \n            <!-- 別のアドバイザーに相談するオプション -->\n            <div v-if=\"Object.keys(availableAdvisors).length > 1\">\n              <div v-if=\"advisorState.remainingTickets > 0\" class=\"my-4\">\n                <v-btn\n                  variant=\"outlined\"\n                  color=\"grey-darken-2\"\n                  @click=\"resetState\"\n                >\n                  <v-icon icon=\"mdi-swap-horizontal-bold\" class=\"mr-1\" />\n                  別のアドバイザーに相談する\n                </v-btn>\n              </div>\n              <p v-else class=\"text-caption my-2\">\n                アドバイスチケットを使い切りました。新しい週次報告時に再度利用可能になります。\n              </p>\n            </div>\n          </div>\n          \n          <!-- アドバイザー選択 -->\n          <div v-else>\n            <v-sheet class=\"mx-3 py-3 rounded-lg advisor-container\">\n              <p class=\"text-body-1\">アドバイザーを選んでください</p>\n \n              <v-window \n                v-model=\"advisorState.selectedRole\" \n                :show-arrows=\"Object.keys(availableAdvisors).length > 1\"\n                continuous\n              >\n                <v-window-item\n                  v-for=\"(advisor, key) in availableAdvisors\"\n                  :key=\"key\"\n                  :value=\"key\"\n                >\n                  <v-card class=\"mx-2 bg-transparent\" elevation=\"0\">\n                    <div class=\"advisor-image-container d-flex align-end justify-center\">\n                      <v-img\n                        :src=\"advisor.image\"\n                        max-width=\"160\"\n                        :class=\"['advisor-image mb-2 mx-auto', { 'scale-up': advisorState.isButtonHovering || advisorState.isLoading }]\"\n                        :position=\"'top'\"\n                      >\n                      </v-img>\n                    </div>\n                    <v-card-title class=\"font-weight-bold\">\n                      <v-icon\n                        :icon=\"advisor.icon\"\n                        :color=\"advisor.color\"\n                        class=\"mt-n1 me-2\"\n                      />\n                      {{ advisor.title }}\n                      <div class=\"text-button\">\n                        {{ advisor.description }}\n                      </div>\n                    </v-card-title>\n                  </v-card>\n                </v-window-item>\n              </v-window>\n \n              <div class=\"d-flex justify-center mb-2\">\n                <v-btn\n                  v-if=\"advisorState.remainingTickets > 0\"\n                  class=\"px-8 border-thin\" \n                  min-width=\"50%\"\n                  height=\"60px\"\n                  variant=\"outlined\"\n                  style=\"--v-border-color: auto\" \n                  :disabled=\"advisorState.remainingTickets === 0\"\n                  @mouseenter=\"handleButtonHover(true)\"\n                  @mouseleave=\"handleButtonHover(false)\"\n                  @click=\"handleGenerateAdvice\"\n                >\n                  <template v-if=\"advisorState.isLoading\">\n                    <v-progress-circular\n                      indeterminate size=\"22\" width=\"4\" \n                      :color=\"advisorRoles[advisorState.selectedRole].color\" class=\"me-2\"\n                    ></v-progress-circular>\n                    アドバイザーに相談中...\n                  </template>\n                  <template v-else>\n                    <div class=\"d-flex flex-column\">\n                      <div class=\"d-flex align-center\">\n                        <v-icon icon=\"mdi-comment-text-outline\" size=\"large\" class=\"me-2\" />\n                        <span>このアドバイザーに相談する</span>\n                      </div>\n                      <div class=\"text-caption pt-1\">\n                        （<v-icon size=\"small\" class=\"mx-1\">mdi-ticket</v-icon>チケットを1枚消費します）\n                      </div>\n                    </div>\n                  </template>\n                </v-btn>\n                <p v-else class=\"text-caption text-error my-1\">\n                  アドバイスチケットを使い切りました。<br>\n                  新しい週次報告時に再度利用可能になります。\n                </p>\n              </div>\n            </v-sheet>\n          </div>\n        </template>\n        <!-- アドバイス機能が無効な場合 -->\n        <template v-else>\n          <v-img\n            :src=\"advisorRoles[advisorState.selectedRole].image\"\n            max-width=\"200\"\n            class=\"mx-auto mt-0 mb-3\"\n            :aspect-ratio=\"1\"\n          ></v-img>\n        </template>\n      </v-card-text>\n \n      <v-card-actions class=\"pt-4 pb-4 flex-shrink-0\">\n        <v-row justify=\"center\" no-gutters>\n          <v-col cols=\"auto\" class=\"mx-2\">\n            <v-btn color=\"primary\" prepend-icon=\"mdi-chevron-left\" variant=\"tonal\" class=\"border-thin\" style=\"--v-border-color: auto\" @click=\"$emit('back')\">\n              週次報告に戻る\n            </v-btn>\n          </v-col>\n          <v-col cols=\"auto\" class=\"mx-2\">\n            <v-btn color=\"grey-darken-1\" prepend-icon=\"mdi-close\" variant=\"tonal\" class=\"border-thin\" style=\"--v-border-color: auto\" @click=\"$emit('close')\">\n              終了する\n            </v-btn>\n          </v-col>\n        </v-row>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { reactive, watch, onMounted, onUnmounted, computed } from 'vue'\nimport { useResponsive } from '@/composables/useResponsive'\nimport { advisorRoles, getWeeklyReportAdvice } from '@/services/bedrockService'\nimport { getMember } from '@/services/publicService'\n\nconst { isMobile } = useResponsive()\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    required: true\n  },\n  reportContent: {\n    type: Object,\n    default: () => ({})\n  },\n  isAdviceEnabled: {\n    type: Boolean,\n    default: false\n  },\n  enabledAdvisors: {\n    type: Array,\n    default: () => []\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'back', 'close'])\n\nconst advisorState = reactive({\n  selectedRole: 'manager',\n  isButtonHovering: false,\n  isLoading: false,\n  isAdviceAvailable: false,\n  isNewReport: false,\n  advice: '',\n  remainingTickets: 0,\n  showAddTicetMessage: false\n})\n\nconst availableAdvisors = computed(() => {\n  if (!props.isAdviceEnabled) {\n    return { manager: advisorRoles.manager }\n  }\n\n  // 組織で有効化されたアドバイザーのみを返す\n  if (props.enabledAdvisors?.length > 0) {\n    return Object.fromEntries(\n      Object.entries(advisorRoles).filter(([key]) => {\n        return props.enabledAdvisors.includes(key)\n      })\n    )\n  }\n  return { manager: advisorRoles.manager }\n})\n\nconst resetState = () => {\n  // アドバイザーを最初の選択肢にリセット\n  const firstAdvisor = Object.keys(availableAdvisors.value)[0] || 'manager'\n  \n  Object.assign(advisorState, {\n    selectedRole: firstAdvisor,\n    isButtonHovering: false,\n    isLoading: false,\n    isAdviceAvailable: false,\n    advice: '',\n    showAddTicetMessage: false\n  })\n}\n\nconst initializeTickets = async (memberUuid) => {\n  if (!memberUuid || !props.isAdviceEnabled) return\n\n  try {\n    const member = await getMember(memberUuid)\n    advisorState.remainingTickets = member.adviceTickets ?? 0\n  } catch (error) {\n    console.error('Error fetching member tickets:', error)\n    advisorState.remainingTickets = 0\n  }\n}\n\nconst handleDialogUpdate = (value) => {\n  emit('update:modelValue', value)\n  if (!value) {\n    resetState()\n  }\n}\n\nconst handleButtonHover = (hovering) => {\n  advisorState.isButtonHovering = hovering\n}\n\nconst handleGenerateAdvice = async () => {\n  if (advisorState.isLoading || advisorState.remainingTickets <= 0) return\n\n  try {\n    advisorState.isLoading = true\n    const response = await getWeeklyReportAdvice(\n      props.reportContent.memberUuid,\n      props.reportContent.weekString,\n      advisorState.selectedRole\n    )\n    \n    Object.assign(advisorState, {\n      advice: response.advice,\n      remainingTickets: response.remainingTickets,\n      isAdviceAvailable: true\n    })\n\n  } catch (error) {\n    console.error('Error getting weekly report advice:', error)\n    const hasNoTickets = error.code === 'INSUFFICIENT_TICKETS'\n    const errorMessage = hasNoTickets\n      ? 'アドバイスチケットが不足しています。新しい週次報告時に再度利用可能になります。'\n      : '申し訳ありません。アドバイスの生成中にエラーが発生しました。'\n    if (hasNoTickets) advisorState.remainingTickets = 0\n    Object.assign(advisorState, {\n      advice: errorMessage,\n      isAdviceAvailable: true\n    })\n  } finally {\n    advisorState.isLoading = false\n  }\n}\n\nconst advisorKeys = computed(() => Object.keys(availableAdvisors.value))\n\nconst handleKeydown = (event) => {\n  if (!props.modelValue || advisorState.isAdviceAvailable) return\n\n  const currentIndex = advisorKeys.value.indexOf(advisorState.selectedRole)\n  if (event.key === 'ArrowLeft') {\n    const prevIndex = currentIndex <= 0 ? advisorKeys.value.length - 1 : currentIndex - 1\n    advisorState.selectedRole = advisorKeys.value[prevIndex]\n  } else if (event.key === 'ArrowRight') {\n    const nextIndex = currentIndex >= advisorKeys.value.length - 1 ? 0 : currentIndex + 1\n    advisorState.selectedRole = advisorKeys.value[nextIndex]\n  }\n}\n\nconst preloadAdvisorImages = () => {\n  Object.values(availableAdvisors.value).forEach(advisor => {\n    const img = new Image()\n    img.src = advisor.image\n  })\n}\n\nonMounted(() => {\n  window.addEventListener('keydown', handleKeydown)\n  preloadAdvisorImages()\n})\n\nonUnmounted(() => {\n  window.removeEventListener('keydown', handleKeydown)\n})\n\nwatch(() => props.reportContent,\n  async (newValue) => {\n    if (newValue?.memberUuid) {\n      resetState()\n      if (props.isAdviceEnabled) {\n        advisorState.showAddTicetMessage = newValue.isNew\n        await initializeTickets(newValue.memberUuid)\n      }\n    }\n  },\n  { immediate: true }\n)\n</script>\n\n<style scoped>\n.advisor-container {\n  border: solid 1px #607d8b;\n  background-color: #e3f2fd;\n}\n\n.advisor-image-container {\n  height: 165px;\n  overflow: hidden;\n}\n\n.advisor-image {\n  width: 100%;\n  transition: transform 0.3s ease;\n}\n\n.scale-up {\n  transform: scale(1.1);\n}\n\n.advisor-image :deep(.v-img__img) {\n  object-fit: cover !important;\n  opacity: 0;\n  animation: fadeIn 0.3s ease forwards;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n.text-advice {\n  font-size: 1em !important;\n  white-space: pre-wrap;\n  line-height: 1.8;\n  letter-spacing: 0.03em;\n}\n\n.ticket-chip-container {\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  z-index: 1;\n}\n\n.ticket-chip {\n  border: solid 1px #e0e0e0;\n}\n\n.ticket-icon {\n  transform: rotate(-35deg);\n  margin-left: 2px;\n  margin-right: 2px;\n}\n\n.v-window {\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.v-window-item {\n  height: 100%;\n}\n\n.v-card {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.v-card-text {\n  scrollbar-color: rgba(0, 0, 0, 0.2) transparent;\n}\n\n.v-card-text::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.v-card-text::-webkit-scrollbar-thumb {\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n.scrollable-content {\n  max-height: 80vh;\n  overflow-y: auto;\n}\n</style>","import script from \"./ReportCompleteDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReportCompleteDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReportCompleteDialog.vue?vue&type=style&index=0&id=6246710d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6246710d\"]])\n\nexport default __exports__","// Styles\nimport './VSheet.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVSheetProps = propsFactory({\n  color: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VSheet')\n\nexport const VSheet = genericComponent()({\n  name: 'VSheet',\n\n  props: makeVSheetProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-sheet',\n          themeClasses.value,\n          backgroundColorClasses.value,\n          borderClasses.value,\n          elevationClasses.value,\n          positionClasses.value,\n          roundedClasses.value,\n          props.class,\n        ]}\n        style={[\n          backgroundColorStyles.value,\n          dimensionStyles.value,\n          locationStyles.value,\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VSheet = InstanceType<typeof VSheet>\n"],"names":["isMobile","useResponsive","props","__props","emit","__emit","advisorState","reactive","selectedRole","isButtonHovering","isLoading","isAdviceAvailable","isNewReport","advice","remainingTickets","showAddTicetMessage","availableAdvisors","computed","isAdviceEnabled","enabledAdvisors","length","Object","fromEntries","entries","advisorRoles","filter","key","includes","manager","resetState","firstAdvisor","keys","value","assign","initializeTickets","async","memberUuid","member","getMember","adviceTickets","error","handleDialogUpdate","handleButtonHover","hovering","handleGenerateAdvice","response","getWeeklyReportAdvice","reportContent","weekString","hasNoTickets","code","errorMessage","advisorKeys","handleKeydown","event","modelValue","currentIndex","indexOf","prevIndex","nextIndex","preloadAdvisorImages","values","forEach","advisor","img","Image","src","image","onMounted","window","addEventListener","onUnmounted","removeEventListener","watch","newValue","isNew","immediate","__exports__","makeVSheetProps","propsFactory","color","String","makeBorderProps","makeComponentProps","makeDimensionProps","makeElevationProps","makeLocationProps","makePositionProps","makeRoundedProps","makeTagProps","makeThemeProps","VSheet","genericComponent","name","setup","_ref","slots","themeClasses","provideTheme","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","borderClasses","useBorder","dimensionStyles","useDimension","elevationClasses","useElevation","locationStyles","useLocation","positionClasses","usePosition","roundedClasses","useRounded","useRender","_createVNode","tag","class","style"],"sourceRoot":""}