{"version":3,"file":"js/350.a5ea8029.js","mappings":"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","sources":["webpack://weekly-report/./src/components/chart/chartUtils.js","webpack://weekly-report/./node_modules/@kurkle/color/dist/color.esm.js","webpack://weekly-report/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://weekly-report/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["import { Chart, registerables } from 'chart.js'\n\nChart.register(...registerables)\nChart.defaults.datasets.line.tension = 0.3\nChart.defaults.datasets.line.spanGaps = true // 欠損値をスキップして線を繋ぐ\n\nexport const createBaseOptions = (config = {}) => ({\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: 'bottom',\n      onClick: (event, legendItem, legend) => {\n        const chart = legend.chart\n        const index = legendItem.datasetIndex\n        \n        // 現在の表示状態を確認\n        const isOnlyThisVisible = chart.data.datasets.every((dataset, i) => \n          i === index ? chart.isDatasetVisible(i) : !chart.isDatasetVisible(i)\n        )\n        \n        if (isOnlyThisVisible) {\n          // 既に対象系列のみが表示されている場合は全て表示\n          chart.data.datasets.forEach((dataset, i) => {\n            chart.setDatasetVisibility(i, true)\n          })\n        } else {\n          // それ以外の場合は対象系列のみ表示\n          chart.data.datasets.forEach((dataset, i) => {\n            chart.setDatasetVisibility(i, i === index)\n          })\n        }\n        \n        chart.update()\n      },\n      /*\n      onHover: (event, legendItem, legend) => {\n        const chart = legend.chart\n        chart.data.datasets.forEach((dataset, index) => {\n          chart.setDatasetVisibility(index, false)\n        })\n        chart.setDatasetVisibility(legendItem.datasetIndex, true)\n        chart.update()\n      },\n      onLeave: (event, legendItem, legend) => {\n        const chart = legend.chart\n        chart.data.datasets.forEach((dataset, index) => {\n          chart.setDatasetVisibility(index, true)\n        })\n        chart.update()\n      }\n      */\n    },\n    title: {\n      display: false,\n      ...config.title\n    }\n  },\n  scales: config.scales || {\n    y: {\n      beginAtZero: config.beginAtZero ?? true,\n      ...config.yAxis\n    }\n  }\n})\n\nconst getExponentialAverage = (data, alpha = 0.3) => {\n  const validValues = data.filter(val => val !== null && val !== undefined && !isNaN(Number(val)))\n  if (validValues.length === 0) return 0\n\n  let ema = Number(validValues[0])\n  for (let i = 1; i < validValues.length; i++) {\n    ema = alpha * Number(validValues[i]) + (1 - alpha) * ema\n  }\n  return ema\n}\n\nconst getValidAverage = (data) => {\n  const validValues = data.filter(val => val !== null && val !== undefined && !isNaN(Number(val)))\n  if (validValues.length === 0) return 0\n  return validValues.reduce((sum, val) => sum + Number(val), 0) / validValues.length\n}\n\nexport const getFilteredData = (datasets, isTop3, options = {}) => {\n  if (!datasets?.length || !isTop3) return datasets || []\n\n  const {\n    useExponential = false,\n    alpha = 0.35 // 最新データに指定値の重み、必要に応じて0.1-0.5の範囲で調整可能\n  } = options\n\n  const sortedDatasets = [...datasets]\n    .sort((a, b) => {\n      const aAvg = useExponential ?\n        getExponentialAverage(a.data, alpha) :\n        getValidAverage(a.data)\n      const bAvg = useExponential ?\n        getExponentialAverage(b.data, alpha) :\n        getValidAverage(b.data)\n      return bAvg - aAvg\n    })\n    .slice(0, 3)\n\n  return sortedDatasets\n}\n\nexport const createChartInstance = ({\n  chartRef,\n  chartData,\n  options,\n  isTop3 = true,\n  averageOptions = {},\n  onError = console.error\n}) => {\n  if (!chartRef) return null\n\n  try {\n    const ctx = chartRef.getContext('2d')\n    const datasets = getFilteredData(chartData.datasets || [], isTop3, averageOptions)\n\n    return new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: chartData.labels,\n        datasets\n      },\n      options\n    })\n  } catch (error) {\n    onError('Error initializing chart:', error)\n    return null\n  }\n}\n\nexport const updateChartInstance = ({\n  chart,\n  chartData,\n  isTop3,\n  options,\n  averageOptions = {},\n  onError = console.error\n}) => {\n  if (!chart || !chartData) return\n\n  try {\n    const datasets = getFilteredData(chartData.datasets, isTop3, averageOptions)\n\n    chart.data = { labels: chartData.labels, datasets }\n    if (options) {\n      chart.options = createBaseOptions(options)\n    }\n\n    chart.update()\n  } catch (error) {\n    onError('チャートの更新に失敗しました', error)\n  }\n}","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.4\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["Chart","register","registerables","defaults","datasets","line","tension","spanGaps","createBaseOptions","config","responsive","maintainAspectRatio","plugins","legend","position","onClick","event","legendItem","chart","index","datasetIndex","isOnlyThisVisible","data","every","dataset","i","isDatasetVisible","forEach","setDatasetVisibility","update","title","display","scales","y","beginAtZero","yAxis","getExponentialAverage","alpha","validValues","filter","val","undefined","isNaN","Number","length","ema","getValidAverage","reduce","sum","getFilteredData","isTop3","options","useExponential","sortedDatasets","sort","a","b","aAvg","bAvg","slice","createChartInstance","chartRef","chartData","averageOptions","onError","ctx","getContext","type","labels","error","updateChartInstance","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","pop","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","offset","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","onHover","parsing","scale","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","generateLabels","fontColor","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}