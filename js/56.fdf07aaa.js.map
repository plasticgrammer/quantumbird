{"version":3,"file":"js/56.fdf07aaa.js","mappings":"uhBA4EA,MAAMA,EAAQC,EAWRC,EAAOC,EAEPC,GAAmBC,EAAAA,EAAAA,QAAO,oBAC1BC,GAASC,EAAAA,EAAAA,MAAI,GACbC,GAAqBD,EAAAA,EAAAA,KAAI,IACzBE,GAAeF,EAAAA,EAAAA,KAAI,IAEnBG,EAAaA,KACjBF,EAAmBG,MAAQX,EAAMY,OAAOC,WAAWC,WACnDL,EAAaE,MAAQX,EAAMY,OAAOC,WAAWE,KAC7CT,EAAOK,OAAQ,CAAI,EAGfK,EAAqBC,UACzB,IACE,MAAMJ,EAAY,CAAEC,WAAYN,EAAmBG,MAAOI,KAAMN,EAAaE,aACvEO,EAAAA,EAAAA,IAAsBlB,EAAMY,OAAOO,WAAYN,GACrD,MAAMO,EAAgB,IAAKpB,EAAMY,OAAQC,aACzCX,EAAK,gBAAiBkB,GACtBhB,EAAiB,cACjBE,EAAOK,OAAQ,CACjB,CAAE,MAAOU,GAEPjB,EAAiB,gBAAiB,QACpC,GAGIkB,EAAcA,KAClBb,EAAaE,MAAQX,EAAMY,OAAOG,KAClCT,EAAOK,OAAQ,CAAK,E,OAGtBY,EAAa,CAAEb,e,2xECpHf,MAAMc,EAAc,EAEpB,O","sources":["webpack://weekly-report/./src/components/MemberInfoDialog.vue","webpack://weekly-report/./src/components/MemberInfoDialog.vue?f9e2"],"sourcesContent":["<template>\n  <v-dialog\n    v-model=\"dialog\"\n    max-width=\"600\"\n  >\n    <v-card rounded=\"lg\">\n      <v-card-title class=\"d-flex justify-space-between align-center\">\n        <div class=\"text-h5 text-medium-emphasis ps-2\">\n          {{ member.name }} さんの情報\n        </div>\n        <v-btn\n          icon=\"mdi-close\"\n          variant=\"text\"\n          @click=\"closeDialog\"\n        ></v-btn>\n      </v-card-title>\n      <v-divider class=\"mb-4\"></v-divider>\n      <v-card-text class=\"py-0\">\n        <div class=\"text-subtitle-1 mb-4\">\n          週次報告システムへようこそ。<br>\n        </div>\n        <div v-if=\"props.isAdviceEnabled\" class=\"text-subtitle-2\">\n          AIアドバイザーからの回答を向上させるために、付加情報を指定できます。<br>\n          <br>\n          <v-text-field\n            v-model=\"editableOccupation\"\n            label=\"あなたの職業\"\n            :rules=\"[v => !v || v.length <= 20 || '職業は20文字以内で入力してください']\"\n            maxlength=\"20\"\n            counter\n            outlined\n            hide-details=\"auto\"\n          />\n          <v-textarea\n            v-model=\"editableGoal\"\n            label=\"あなたの目標\"\n            :rules=\"[v => !v || v.length <= 50 || '目標は50文字以内で入力してください']\"\n            maxlength=\"50\"\n            counter\n            rows=\"3\"\n            auto-grow\n            outlined\n            hide-details=\"auto\"\n          />\n        </div>\n        <div v-else class=\"text-subtitle-2\">\n          ここではAIアドバイザーからの回答を向上させるために付加情報を指定できます。<br>\n          ・職業<br>\n          ・目標<br>\n          無料版ではこの機能を利用できません。\n        </div>\n      </v-card-text>\n      <v-divider class=\"mt-2\"></v-divider>\n      <v-card-actions class=\"my-2 d-flex justify-end\">\n        <v-btn\n          class=\"text-none\"\n          text=\"閉じる\"\n          @click=\"closeDialog\"\n        ></v-btn>\n        <v-btn\n          v-if=\"props.isAdviceEnabled\"\n          prepend-icon=\"mdi-check\"\n          color=\"primary\"\n          class=\"text-none\"\n          text=\"保存\"\n          @click=\"saveAndCloseDialog\"\n        ></v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, inject } from 'vue'\nimport { updateMemberExtraInfo } from '@/services/publicService'\n\nconst props = defineProps({\n  member: {\n    type: Object,\n    required: true\n  },\n  isAdviceEnabled: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:member'])\n\nconst showNotification = inject('showNotification')\nconst dialog = ref(false)\nconst editableOccupation = ref('')\nconst editableGoal = ref('')\n\nconst openDialog = () => {\n  editableOccupation.value = props.member.extraInfo?.occupation\n  editableGoal.value = props.member.extraInfo?.goal\n  dialog.value = true\n}\n\nconst saveAndCloseDialog = async () => {\n  try {\n    const extraInfo = { occupation: editableOccupation.value, goal: editableGoal.value }\n    await updateMemberExtraInfo(props.member.memberUuid, extraInfo)\n    const updatedMember = { ...props.member, extraInfo }\n    emit('update:member', updatedMember)\n    showNotification('情報を更新しました。')\n    dialog.value = false\n  } catch (error) {\n    console.error('ExtraInfo update failed:', error)\n    showNotification('情報の更新に失敗しました。', 'error')\n  }\n}\n\nconst closeDialog = () => {\n  editableGoal.value = props.member.goal // Reset to the original value if not saved\n  dialog.value = false\n}\n\ndefineExpose({ openDialog })\n</script>","import script from \"./MemberInfoDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MemberInfoDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["props","__props","emit","__emit","showNotification","inject","dialog","ref","editableOccupation","editableGoal","openDialog","value","member","extraInfo","occupation","goal","saveAndCloseDialog","async","updateMemberExtraInfo","memberUuid","updatedMember","error","closeDialog","__expose","__exports__"],"sourceRoot":""}