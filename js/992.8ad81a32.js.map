{"version":3,"file":"js/992.8ad81a32.js","mappings":"wXA+BA,MAAMA,EAAc,CAClBC,MAAO,CACLC,SAAU,EACVC,UAAW,EACXC,SAAWC,GACK,IAAVA,EAAoB,OACV,IAAVA,EAAoB,OACjB,GAETC,eAAe,GAEjBC,MAAO,CACLC,SAAS,EACTC,KAAM,UAERC,KAAM,CACJC,MAAQC,GAAmC,IAAvBA,EAAQC,KAAKR,MAAc,qBAAuB,uB,sLC5C1E,MAAMS,EAAc,EAEpB,O,2gBCOA,MAAMC,EAAQC,EA6BRC,EAAOC,EACPC,GAAWC,EAAAA,EAAAA,KAAI,MACfC,GAAQC,EAAAA,EAAAA,YAAW,MACnBC,GAAaH,EAAAA,EAAAA,KAAI,GAEvB,SAASI,EAAYC,EAASC,GAE5BT,EAAK,QAAS,CAAEQ,UAASC,SAC3B,CAEA,SAASC,IACFN,EAAMhB,OAAUU,EAAMa,aAE3BC,EAAAA,EAAAA,IAAoB,CAClBR,MAAOA,EAAMhB,MACbuB,UAAWb,EAAMa,UACjBE,OAAQf,EAAMe,OACdC,QAAShB,EAAMgB,QACfC,eAAgBjB,EAAMiB,eACtBC,QAAST,IAEXD,EAAWlB,MAAQU,EAAMa,UAAUM,UAAUC,QAAU,EACzD,C,OAEAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,GAAeC,EAAAA,EAAAA,IAAkBvB,EAAMgB,SAC7CV,EAAMhB,OAAQkC,EAAAA,EAAAA,IAAoB,CAChCpB,SAAUA,EAASd,MACnBuB,UAAWb,EAAMa,UACjBG,QAASM,EACTP,OAAQf,EAAMe,OACdE,eAAgBjB,EAAMiB,eACtBC,QAAST,IAEXD,EAAWlB,MAAQU,EAAMa,UAAUM,UAAUC,QAAU,CAAC,KAG1DK,EAAAA,EAAAA,cAAY,KACNnB,EAAMhB,QACRgB,EAAMhB,MAAMoC,UACZpB,EAAMhB,MAAQ,KAChB,KAGFqC,EAAAA,EAAAA,OACE,CACE,IAAM3B,EAAMgB,QACZ,IAAMhB,EAAMa,UACZ,IAAMb,EAAMe,OACZ,IAAMf,EAAMiB,gBAEdL,EACA,CAAEgB,MAAM,I,2MCvFV,MAAM7B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,ySCsBA,MAAMC,EAAQC,EA+BR4B,GAAexB,EAAAA,EAAAA,MAAI,GAEnBiB,GAAeQ,EAAAA,EAAAA,WAAS,KAAM,CAClCC,MAAO,CACLC,IAAKhC,EAAMgC,IACXC,IAAKjC,EAAMiC,OACRjC,EAAMf,iBAIPgC,GAAiBa,EAAAA,EAAAA,WAAS,KAAM,CACpCI,eAAgBL,EAAavC,MAC7B6C,MAAO,O,szBCnET,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://weekly-report/./src/components/chart/AchievementChart.vue","webpack://weekly-report/./src/components/chart/AchievementChart.vue?458f","webpack://weekly-report/./src/components/chart/LineChart.vue","webpack://weekly-report/./src/components/chart/LineChart.vue?bed0","webpack://weekly-report/./src/components/chart/BaseChart.vue","webpack://weekly-report/./src/components/chart/BaseChart.vue?b254"],"sourcesContent":["<template>\n  <BaseChart\n    :widget-id=\"widgetId\"\n    :title=\"title\"\n    :chart-data=\"chartData\"\n    :y-axis-config=\"yAxisConfig\"\n  />\n</template>\n\n<script setup>\nimport BaseChart from './BaseChart.vue'\n\ndefineProps({\n  widgetId: {\n    type: String,\n    required: true\n  },\n  title: {\n    type: String,\n    required: true\n  },\n  chartData: {\n    type: Object,\n    required: true,\n    default: () => ({\n      labels: [],\n      datasets: []\n    })\n  }\n})\n\nconst yAxisConfig = {\n  ticks: {\n    stepSize: 1,\n    precision: 0,\n    callback: (value) => {\n      if (value === 1) return '課題あり'\n      if (value === 5) return '理想以上'\n      return ''\n    },\n    includeBounds: false\n  },\n  title: {\n    display: true,\n    text: 'タスク達成度'\n  },\n  grid: {\n    color: (context) => context.tick.value === 5 ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.1)'\n  }\n}\n</script>","import script from \"./AchievementChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AchievementChart.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"chart-container\">\n    <div class=\"chart-wrapper\">\n      <canvas ref=\"chartRef\" class=\"chart-canvas\"></canvas>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, shallowRef, watch, onMounted, onUnmounted } from 'vue'\nimport { createBaseOptions, createChartInstance, updateChartInstance } from './chartUtils'\n\nconst props = defineProps({\n  chartData: {\n    type: Object,\n    required: true,\n    validator: (value) => {\n      if (!value || !Array.isArray(value.labels) || !Array.isArray(value.datasets)) {\n        return false\n      }\n      // データセットの構造を検証\n      return value.datasets.every(dataset => \n        dataset && Array.isArray(dataset.data) && \n        dataset.data.length === value.labels.length\n      )\n    }\n  },\n  options: {\n    type: Object,\n    default: () => ({})\n  },\n  isTop3: {\n    type: Boolean,\n    default: true\n  },\n  averageOptions: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['error'])\nconst chartRef = ref(null)\nconst chart = shallowRef(null)\nconst totalCount = ref(0)\n\nfunction handleError(message, error) {\n  console.error(message, error)\n  emit('error', { message, error })\n}\n\nfunction updateChart() {\n  if (!chart.value || !props.chartData) return\n  \n  updateChartInstance({\n    chart: chart.value,\n    chartData: props.chartData,\n    isTop3: props.isTop3,\n    options: props.options,\n    averageOptions: props.averageOptions,\n    onError: handleError\n  })\n  totalCount.value = props.chartData.datasets?.length || 0\n}\n\nonMounted(() => {\n  const chartOptions = createBaseOptions(props.options)\n  chart.value = createChartInstance({\n    chartRef: chartRef.value,\n    chartData: props.chartData,\n    options: chartOptions,\n    isTop3: props.isTop3,\n    averageOptions: props.averageOptions,\n    onError: handleError\n  })\n  totalCount.value = props.chartData.datasets?.length || 0\n})\n\nonUnmounted(() => {\n  if (chart.value) {\n    chart.value.destroy()\n    chart.value = null\n  }\n})\n\nwatch(\n  [\n    () => props.options, \n    () => props.chartData, \n    () => props.isTop3,\n    () => props.averageOptions\n  ],\n  updateChart,\n  { deep: true }\n)\n</script>\n\n<style scoped>\n.chart-container {\n  width: 100%;\n}\n\n.chart-wrapper {\n  position: relative;\n  height: 180px;\n  width: 100%;\n}\n\n.chart-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100% !important;\n  height: 100% !important;\n}\n</style>","import script from \"./LineChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LineChart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LineChart.vue?vue&type=style&index=0&id=4e291d01&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e291d01\"]])\n\nexport default __exports__","<template>\n  <BaseWidget :widget-id=\"widgetId\" :title=\"title\" icon=\"mdi-chart-line\">\n    <template #header-append>\n      <v-checkbox\n        v-if=\"chartData.datasets?.length > 3\"\n        v-model=\"isRecentTop3\"\n        v-tooltip:top=\"'直近のデータを重視して上位3件を表示'\"\n        color=\"blue-grey-lighten-3\"\n        density=\"compact\"\n        hide-details\n      >\n        <template #label>\n          <span class=\"text-body-2\">直近上位3件</span>\n        </template>\n      </v-checkbox>\n    </template>\n    <LineChart \n      :chart-data=\"chartData\" \n      :options=\"chartOptions\" \n      :is-top3=\"isRecentTop3\"\n      :average-options=\"averageOptions\"\n    />\n  </BaseWidget>\n</template>\n\n<script setup>\nimport { computed, ref } from 'vue'\nimport BaseWidget from '../widget/BaseWidget.vue'\nimport LineChart from './LineChart.vue'\n\nconst props = defineProps({\n  widgetId: {\n    type: String,\n    required: true\n  },\n  title: {\n    type: String,\n    required: true\n  },\n  chartData: {\n    type: Object,\n    required: true,\n    default: () => ({\n      labels: [],\n      datasets: []\n    })\n  },\n  min: {\n    type: Number,\n    default: 0.8\n  },\n  max: {\n    type: Number,\n    default: 5.2\n  },\n  yAxisConfig: {\n    type: Object,\n    required: true\n  }\n})\n\nconst isRecentTop3 = ref(true)\n\nconst chartOptions = computed(() => ({\n  yAxis: {\n    min: props.min,\n    max: props.max,\n    ...props.yAxisConfig\n  }\n}))\n\nconst averageOptions = computed(() => ({\n  useExponential: isRecentTop3.value,\n  alpha: 0.3\n}))\n</script>\n\n<style scoped>\n:deep(.v-checkbox) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n</style>","import script from \"./BaseChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BaseChart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BaseChart.vue?vue&type=style&index=0&id=db2a41d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-db2a41d0\"]])\n\nexport default __exports__"],"names":["yAxisConfig","ticks","stepSize","precision","callback","value","includeBounds","title","display","text","grid","color","context","tick","__exports__","props","__props","emit","__emit","chartRef","ref","chart","shallowRef","totalCount","handleError","message","error","updateChart","chartData","updateChartInstance","isTop3","options","averageOptions","onError","datasets","length","onMounted","chartOptions","createBaseOptions","createChartInstance","onUnmounted","destroy","watch","deep","isRecentTop3","computed","yAxis","min","max","useExponential","alpha"],"sourceRoot":""}