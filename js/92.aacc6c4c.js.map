{"version":3,"file":"js/92.aacc6c4c.js","mappings":"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","sources":["webpack://weekly-report/../../../src/components/VToolbar/VToolbarTitle.tsx","webpack://weekly-report/../../../src/components/VToolbar/VToolbar.tsx","webpack://weekly-report/../../../src/components/VToolbar/VToolbarItems.tsx","webpack://weekly-report/./src/components/DialogUserMenu.vue","webpack://weekly-report/./src/components/DialogUserMenu.vue?820b"],"sourcesContent":["// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VToolbarTitle')\n\nexport type VToolbarTitleSlots = {\n  default: never\n  text: never\n}\n\nexport const VToolbarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VToolbarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar-title',\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { hasText && (\n            <div class=\"v-toolbar-title__placeholder\">\n              { slots.text ? slots.text() : props.text }\n\n              { slots.default?.() }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VToolbarTitle = InstanceType<typeof VToolbarTitle>\n","// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VToolbarTitle } from './VToolbarTitle'\nimport { VExpandTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { useRtl } from '@/composables/locale'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, shallowRef, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport type Density = null | 'prominent' | 'default' | 'comfortable' | 'compact'\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'VToolbar')\n\nexport type VToolbarSlots = {\n  default: never\n  image: never\n  prepend: never\n  append: never\n  title: never\n  extension: never\n}\n\nexport const VToolbar = genericComponent<VToolbarSlots>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses } = useRtl()\n\n    const isExtended = shallowRef(!!(props.extended || slots.extension?.()))\n    const contentHeight = computed(() => parseInt((\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ), 10))\n    const extensionHeight = computed(() => isExtended.value\n      ? parseInt((\n        Number(props.extensionHeight) +\n        (props.density === 'prominent' ? Number(props.extensionHeight) : 0) -\n        (props.density === 'comfortable' ? 4 : 0) -\n        (props.density === 'compact' ? 8 : 0)\n      ), 10)\n      : 0\n    )\n\n    provideDefaults({\n      VBtn: {\n        variant: 'text',\n      },\n    })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n\n      const extension = slots.extension?.()\n      isExtended.value = !!(props.extended || extension)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-toolbar__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(contentHeight.value),\n              },\n            }}\n          >\n            <div\n              class=\"v-toolbar__content\"\n              style={{ height: convertToUnit(contentHeight.value) }}\n            >\n              { slots.prepend && (\n                <div class=\"v-toolbar__prepend\">\n                  { slots.prepend?.() }\n                </div>\n              )}\n\n              { hasTitle && (\n                <VToolbarTitle key=\"title\" text={ props.title }>\n                  {{ text: slots.title }}\n                </VToolbarTitle>\n              )}\n\n              { slots.default?.() }\n\n              { slots.append && (\n                <div class=\"v-toolbar__append\">\n                  { slots.append?.() }\n                </div>\n              )}\n            </div>\n          </VDefaultsProvider>\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(extensionHeight.value),\n              },\n            }}\n          >\n            <VExpandTransition>\n              { isExtended.value && (\n                <div\n                  class=\"v-toolbar__extension\"\n                  style={{ height: convertToUnit(extensionHeight.value) }}\n                >\n                  { extension }\n                </div>\n              )}\n            </VExpandTransition>\n          </VDefaultsProvider>\n        </props.tag>\n      )\n    })\n\n    return {\n      contentHeight,\n      extensionHeight,\n    }\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVToolbarItemsProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeVariantProps({ variant: 'text' } as const),\n}, 'VToolbarItems')\n\nexport const VToolbarItems = genericComponent()({\n  name: 'VToolbarItems',\n\n  props: makeVToolbarItemsProps(),\n\n  setup (props, { slots }) {\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        height: 'inherit',\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-toolbar-items',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VToolbarItems = InstanceType<typeof VToolbarItems>\n","<template>\n  <v-dialog v-model=\"dialog\" fullscreen>\n    <v-card>\n      <v-toolbar color=\"menu\">\n        <v-btn icon @click=\"closeDialog\">\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n        <v-toolbar-title>メニュー</v-toolbar-title>\n      </v-toolbar>\n\n      <v-list>\n        <v-list-item>\n          <v-list-item-title class=\"text-body-2 py-2\">\n            <div>{{ user.email }}</div>\n            <v-btn\n              prepend-icon=\"mdi-wallet-membership\"\n              variant=\"plain\"\n              @click=\"handleBillingClick\"\n            >\n              {{ currentPlan.name }}\n            </v-btn>\n          </v-list-item-title>\n        </v-list-item>\n\n        <v-divider></v-divider>\n\n        <v-list-item\n          prepend-icon=\"mdi-cog-outline\"\n          title=\"アカウント設定\"\n          link\n          @click=\"navigateToAccountSetting\"\n        >\n        </v-list-item>\n        <v-divider></v-divider>\n        <v-list-item\n          v-for=\"item in helpMenuItems\"\n          :key=\"item.title\"\n          v-bind=\"item\"\n          link\n          @click=\"item.onClick\"\n        >\n        </v-list-item>\n        <v-divider></v-divider>\n        <v-list-item\n          prepend-icon=\"mdi-logout-variant\"\n          title=\"サインアウト\"\n          @click=\"handleSignOut\"\n        >\n        </v-list-item>\n      </v-list>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed, inject } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { feedbackUrl, termsOfServiceUrl, privacyPolicyUrl, specifiedCommercialTransactionsUrl } from '@/config/environment'\nimport { getCurrentPlan } from '@/config/plans'\n\nconst props = defineProps({\n  modelValue: Boolean\n})\n\nconst showNotification = inject('showNotification')\nconst emit = defineEmits(['update:modelValue', 'sign-out'])\n\nconst store = useStore()\nconst router = useRouter()\n\nconst dialog = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value)\n})\n\nconst user = computed(() => ({\n  email: store.getters['auth/email']\n}))\n\nconst currentPlan = computed(() => getCurrentPlan())\nconst isParentAccount = computed(() => store.getters['auth/isParentAccount'])\n\nconst closeDialog = () => {\n  dialog.value = false\n}\n\nconst handleSignOut = () => {\n  closeDialog()\n  emit('sign-out')\n}\n\nconst navigateToAccountSetting = () => {\n  closeDialog()\n  router.push({ name: 'AccountSetting' })\n}\n\nconst helpMenuItems = computed(() => ([\n  {\n    prependIcon: 'mdi-comment-quote-outline',\n    title: 'フィードバック',\n    onClick: () => window.open(feedbackUrl, '_blank', 'noopener,noreferrer')\n  },\n  {\n    prependIcon: 'mdi-file-document-outline',\n    title: '利用規約',\n    onClick: () => window.open(termsOfServiceUrl, '_blank', 'noopener,noreferrer')\n  },\n  {\n    prependIcon: 'mdi-shield-account-outline',\n    title: 'プライバシーポリシー',\n    onClick: () => window.open(privacyPolicyUrl, '_blank', 'noopener,noreferrer')\n  },\n  {\n    prependIcon: 'mdi-shopping-outline',\n    title: '特定商取引法に基づく表記',\n    onClick: () => window.open(specifiedCommercialTransactionsUrl, '_blank', 'noopener,noreferrer')\n  }\n]))\n\nconst handleBillingClick = () => {\n  if (isParentAccount.value) {\n    closeDialog()\n    router.push({ name: 'Billing' })\n  } else {\n    showNotification('支払い設定は親アカウントでのみ変更可能です。', 'warning')\n  }\n}\n</script>","import script from \"./DialogUserMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DialogUserMenu.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["makeVToolbarTitleProps","propsFactory","text","String","makeComponentProps","makeTagProps","VToolbarTitle","genericComponent","name","props","setup","_ref","slots","useRender","hasText","default","_createVNode","tag","class","style","allowedDensities","makeVToolbarProps","absolute","Boolean","collapse","color","density","type","validator","v","includes","extended","extensionHeight","Number","flat","floating","height","image","title","makeBorderProps","makeElevationProps","makeRoundedProps","makeThemeProps","VToolbar","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","borderClasses","useBorder","elevationClasses","useElevation","roundedClasses","useRounded","themeClasses","provideTheme","rtlClasses","useRtl","isExtended","shallowRef","extension","contentHeight","computed","parseInt","value","provideDefaults","VBtn","variant","hasTitle","hasImage","VDefaultsProvider","VImg","cover","src","VTabs","convertToUnit","prepend","append","VExpandTransition","makeVToolbarItemsProps","makeVariantProps","__props","showNotification","inject","emit","__emit","store","useStore","router","useRouter","dialog","get","modelValue","set","user","email","getters","currentPlan","getCurrentPlan","isParentAccount","closeDialog","handleSignOut","navigateToAccountSetting","push","helpMenuItems","prependIcon","onClick","window","open","feedbackUrl","termsOfServiceUrl","privacyPolicyUrl","specifiedCommercialTransactionsUrl","handleBillingClick","__exports__"],"sourceRoot":""}